/**
 * Layout direction
 * ---------------------- */
html:not([dir="rtl"]) :where(x-input, .x-input) {
  flex-flow: row nowrap;
}

html[dir="rtl"] :where(x-input, .x-input) {
  flex-flow: column nowrap;
}

/**
 * Base
 * ------------------------ */

/**
 * Padding (ltr)
 * ------------------------ */
html:not([dir="rtl"]) :where(x-input, .x-input):where(
  input:not(
    [type="button"],
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"],
    [type="reset"],
    [type="submit"]
   ),
  select,
  textarea
),
html:not([dir="rtl"]) :where(x-input, .x-input) > *:not(
  [type="button"],
  [type="checkbox"],
  [type="color"],
  [type="image"],
  [type="radio"],
  [type="range"],
  [type="reset"],
  [type="submit"]
) {
  padding: var(--x-input-padding-block) var(--x-input-padding-inline);
}

/**
 * Padding (rtl)
 */
html[dir="rtl"] :where(x-input, .x-input):is(
  input:not(
    [type="button"],
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"],
    [type="reset"],
    [type="submit"]
  ),
  select,
  textarea
),
html[dir="rtl"] :where(x-input, .x-input) > *:not(
  [type="button"],
  [type="checkbox"],
  [type="color"],
  [type="image"],
  [type="radio"],
  [type="range"],
  [type="reset"],
  [type="submit"]
) {
  padding: var(--x-input-padding-inline) var(--x-input-padding-block);
}

/**
 * Default dimensions, where not checkbox, and/or radio button.
 */
:where(x-input, .x-input):not([type="checkbox"], [type="radio"]) {
  --x-input-padding-block: var(--x-8px);
  --x-input-padding-inline: var(--x-8px);

  display: flex;
  width: fit-content;
  height: fit-content;
  color: var(--x-input-text-color);
}

/**
 * Default background.
 */
:where(x-input, .x-input):has(
  input:not(
    [type="button"],
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"],
    [type="reset"],
    [type="submit"]
  ),
  select,
  textarea
),
:where(x-input, .x-input):is(
  input:not(
    [type="button"],
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"],
    [type="reset"],
    [type="submit"]
  ),
  select,
  textarea
) {
  background: var(--x-input-bg-color);
}

:where(x-input, .x-input) > :is(input, textarea, select) {
  vertical-align: middle;
}

/*
 * Input, Select, Textarea, and 'not checkbox, or radio'
 * ---------------------- */
:where(x-input, .x-input):not([type="checkbox"], [type="radio"]),
:where(x-input, .x-input) > :is(
  input:not([type="checkbox"], [type="radio"]),
  textarea,
  select
) {
  border-radius: var(--x-border-radius);
}

:where(x-input, .x-input):is(
  input:not([type="checkbox"], [type="radio"]),
  textarea,
  select
),
:where(x-input, .x-input) > :is(
  input:not([type="checkbox"], [type="radio"]),
  textarea,
  select
 ) {
  border: none;
  margin: 0;
}

/**
 * Line-height
 */
:where(x-input, .x-input):where(
  input:not(
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"]
  ),
  select,
  textarea
),
:where(x-input, .x-input) > :where(
  input:not(
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"]
  ),
  select,
  textarea
) {
  line-height: var(--x-24px);
}

/*
 * Focus Visible
 *--------------------- */
:where(x-input, .x-input) > :is(
  input:not(
    [type="button"],
    [type="checkbox"],
    [type="color"],
    [type="image"],
    [type="radio"],
    [type="range"],
    [type="reset"],
    [type="submit"]
  ),
  select,
  textarea
):focus-visible {
  outline: none;
}

/*
 * Outlined/Default
 * ----------------------- */
:where(
  :where(x-input, .x-input):not(.x-underlined),
  :where(x-input, .x-input).x-outlined
):has(
  input:not([type="range"], [type="image"], [type="checkbox"], [type="radio"]),
  select,
  textarea
),
:where(
  :where(x-input, .x-input):not(.x-underlined),
  :where(x-input, .x-input).x-outlined
):is(
  input:not([type="range"], [type="image"], [type="checkbox"], [type="radio"]),
  select,
  textarea
) {
  border: var(--x-border-width) solid;
}

:where(x-input, .x-input).x-underlined {
  border-bottom: var(--x-border-width) solid;
}

/*
 * Size
 * -------------------- */
:where(x-input, .x-input).x-small {
  /*--x-input-padding-block: ;*/
}
